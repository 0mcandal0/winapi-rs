// Copyright Â© 2015, Peter Atashian
// Licensed under the MIT License <LICENSE.md>
//! FFI bindings to crypt32.
#![cfg(windows)]
extern crate winapi;
use winapi::*;
extern "system" {
    // pub fn CertAddCRLContextToStore();
    // pub fn CertAddCRLLinkToStore();
    // pub fn CertAddCTLContextToStore();
    // pub fn CertAddCTLLinkToStore();
    // pub fn CertAddCertificateContextToStore();
    // pub fn CertAddCertificateLinkToStore();
    // pub fn CertAddEncodedCRLToStore();
    // pub fn CertAddEncodedCTLToStore();
    // pub fn CertAddEncodedCertificateToStore();
    // pub fn CertAddEncodedCertificateToSystemStoreA();
    // pub fn CertAddEncodedCertificateToSystemStoreW();
    // pub fn CertAddEnhancedKeyUsageIdentifier();
    // pub fn CertAddRefServerOcspResponse();
    // pub fn CertAddRefServerOcspResponseContext();
    // pub fn CertAddSerializedElementToStore();
    // pub fn CertAddStoreToCollection();
    // pub fn CertAlgIdToOID();
    // pub fn CertCloseServerOcspResponse();
    // pub fn CertCloseStore();
    // pub fn CertCompareCertificate();
    // pub fn CertCompareCertificateName();
    // pub fn CertCompareIntegerBlob();
    // pub fn CertComparePublicKeyInfo();
    // pub fn CertControlStore();
    // pub fn CertCreateCRLContext();
    // pub fn CertCreateCTLContext();
    // pub fn CertCreateCTLEntryFromCertificateContextProperties();
    // pub fn CertCreateCertificateChainEngine();
    // pub fn CertCreateCertificateContext();
    // pub fn CertCreateContext();
    // pub fn CertCreateSelfSignCertificate();
    // pub fn CertDeleteCRLFromStore();
    // pub fn CertDeleteCTLFromStore();
    // pub fn CertDeleteCertificateFromStore();
    // pub fn CertDuplicateCRLContext();
    // pub fn CertDuplicateCTLContext();
    // pub fn CertDuplicateCertificateChain();
    // pub fn CertDuplicateCertificateContext();
    // pub fn CertDuplicateStore();
    // pub fn CertEnumCRLContextProperties();
    // pub fn CertEnumCRLsInStore();
    // pub fn CertEnumCTLContextProperties();
    // pub fn CertEnumCTLsInStore();
    // pub fn CertEnumCertificateContextProperties();
    // pub fn CertEnumCertificatesInStore();
    // pub fn CertEnumPhysicalStore();
    // pub fn CertEnumSubjectInSortedCTL();
    // pub fn CertEnumSystemStore();
    // pub fn CertEnumSystemStoreLocation();
    // pub fn CertFindAttribute();
    // pub fn CertFindCRLInStore();
    // pub fn CertFindCTLInStore();
    // pub fn CertFindCertificateInCRL();
    // pub fn CertFindCertificateInStore();
    // pub fn CertFindChainInStore();
    // pub fn CertFindExtension();
    // pub fn CertFindRDNAttr();
    // pub fn CertFindSubjectInCTL();
    // pub fn CertFindSubjectInSortedCTL();
    // pub fn CertFreeCRLContext();
    // pub fn CertFreeCTLContext();
    // pub fn CertFreeCertificateChain();
    // pub fn CertFreeCertificateChainEngine();
    // pub fn CertFreeCertificateChainList();
    // pub fn CertFreeCertificateContext();
    // pub fn CertFreeServerOcspResponseContext();
    // pub fn CertGetCRLContextProperty();
    // pub fn CertGetCRLFromStore();
    // pub fn CertGetCTLContextProperty();
    // pub fn CertGetCertificateChain();
    // pub fn CertGetCertificateContextProperty();
    // pub fn CertGetEnhancedKeyUsage();
    // pub fn CertGetIntendedKeyUsage();
    // pub fn CertGetIssuerCertificateFromStore();
    // pub fn CertGetNameStringA();
    // pub fn CertGetNameStringW();
    // pub fn CertGetPublicKeyLength();
    // pub fn CertGetServerOcspResponseContext();
    // pub fn CertGetStoreProperty();
    // pub fn CertGetSubjectCertificateFromStore();
    // pub fn CertGetValidUsages();
    // pub fn CertIsRDNAttrsInCertificateName();
    // pub fn CertIsStrongHashToSign();
    // pub fn CertIsValidCRLForCertificate();
    // pub fn CertNameToStrA();
    // pub fn CertNameToStrW();
    // pub fn CertOIDToAlgId();
    // pub fn CertOpenServerOcspResponse();
    // pub fn CertOpenStore();
    // pub fn CertOpenSystemStoreA();
    // pub fn CertOpenSystemStoreW();
    // pub fn CertRDNValueToStrA();
    // pub fn CertRDNValueToStrW();
    // pub fn CertRegisterPhysicalStore();
    // pub fn CertRegisterSystemStore();
    // pub fn CertRemoveEnhancedKeyUsageIdentifier();
    // pub fn CertRemoveStoreFromCollection();
    // pub fn CertResyncCertificateChainEngine();
    // pub fn CertRetrieveLogoOrBiometricInfo();
    // pub fn CertSaveStore();
    // pub fn CertSelectCertificateChains();
    // pub fn CertSerializeCRLStoreElement();
    // pub fn CertSerializeCTLStoreElement();
    // pub fn CertSerializeCertificateStoreElement();
    // pub fn CertSetCRLContextProperty();
    // pub fn CertSetCTLContextProperty();
    // pub fn CertSetCertificateContextPropertiesFromCTLEntry();
    // pub fn CertSetCertificateContextProperty();
    // pub fn CertSetEnhancedKeyUsage();
    // pub fn CertSetStoreProperty();
    // pub fn CertStrToNameA();
    // pub fn CertStrToNameW();
    // pub fn CertUnregisterPhysicalStore();
    // pub fn CertUnregisterSystemStore();
    // pub fn CertVerifyCRLRevocation();
    // pub fn CertVerifyCRLTimeValidity();
    // pub fn CertVerifyCTLUsage();
    // pub fn CertVerifyCertificateChainPolicy();
    // pub fn CertVerifyRevocation();
    // pub fn CertVerifySubjectCertificateContext();
    // pub fn CertVerifyTimeValidity();
    // pub fn CertVerifyValidityNesting();
    // pub fn CryptAcquireCertificatePrivateKey();
    // pub fn CryptBinaryToStringA();
    // pub fn CryptBinaryToStringW();
    // pub fn CryptCloseAsyncHandle();
    // pub fn CryptCreateAsyncHandle();
    // pub fn CryptCreateKeyIdentifierFromCSP();
    // pub fn CryptDecodeMessage();
    // pub fn CryptDecodeObject();
    // pub fn CryptDecodeObjectEx();
    // pub fn CryptDecryptAndVerifyMessageSignature();
    // pub fn CryptDecryptMessage();
    // pub fn CryptEncodeObject();
    // pub fn CryptEncodeObjectEx();
    // pub fn CryptEncryptMessage();
    // pub fn CryptEnumKeyIdentifierProperties();
    // pub fn CryptEnumOIDFunction();
    // pub fn CryptEnumOIDInfo();
    // pub fn CryptExportPKCS8();
    // pub fn CryptExportPublicKeyInfo();
    // pub fn CryptExportPublicKeyInfoEx();
    // pub fn CryptExportPublicKeyInfoFromBCryptKeyHandle();
    // pub fn CryptFindCertificateKeyProvInfo();
    // pub fn CryptFindLocalizedName();
    // pub fn CryptFindOIDInfo();
    // pub fn CryptFormatObject();
    // pub fn CryptFreeOIDFunctionAddress();
    // pub fn CryptGetAsyncParam();
    // pub fn CryptGetDefaultOIDDllList();
    // pub fn CryptGetDefaultOIDFunctionAddress();
    // pub fn CryptGetKeyIdentifierProperty();
    // pub fn CryptGetMessageCertificates();
    // pub fn CryptGetMessageSignerCount();
    // pub fn CryptGetOIDFunctionAddress();
    // pub fn CryptGetOIDFunctionValue();
    // pub fn CryptHashCertificate();
    // pub fn CryptHashCertificate2();
    // pub fn CryptHashMessage();
    // pub fn CryptHashPublicKeyInfo();
    // pub fn CryptHashToBeSigned();
    // pub fn CryptImportPKCS8();
    // pub fn CryptImportPublicKeyInfo();
    // pub fn CryptImportPublicKeyInfoEx();
    // pub fn CryptImportPublicKeyInfoEx2();
    // pub fn CryptInitOIDFunctionSet();
    // pub fn CryptInstallDefaultContext();
    // pub fn CryptInstallOIDFunctionAddress();
    // pub fn CryptLoadSip();
    // pub fn CryptMemAlloc();
    // pub fn CryptMemFree();
    // pub fn CryptMemRealloc();
    // pub fn CryptMsgCalculateEncodedLength();
    // pub fn CryptMsgClose();
    // pub fn CryptMsgControl();
    // pub fn CryptMsgCountersign();
    // pub fn CryptMsgCountersignEncoded();
    // pub fn CryptMsgDuplicate();
    // pub fn CryptMsgEncodeAndSignCTL();
    // pub fn CryptMsgGetAndVerifySigner();
    // pub fn CryptMsgGetParam();
    // pub fn CryptMsgOpenToDecode();
    // pub fn CryptMsgOpenToEncode();
    // pub fn CryptMsgSignCTL();
    // pub fn CryptMsgUpdate();
    // pub fn CryptMsgVerifyCountersignatureEncoded();
    // pub fn CryptMsgVerifyCountersignatureEncodedEx();
    // pub fn CryptProtectData();
    // pub fn CryptProtectMemory();
    // pub fn CryptQueryObject();
    // pub fn CryptRegisterDefaultOIDFunction();
    // pub fn CryptRegisterOIDFunction();
    // pub fn CryptRegisterOIDInfo();
    // pub fn CryptRetrieveTimeStamp();
    // pub fn CryptSIPAddProvider();
    // pub fn CryptSIPCreateIndirectData();
    // pub fn CryptSIPGetCaps();
    // pub fn CryptSIPGetSealedDigest();
    // pub fn CryptSIPGetSignedDataMsg();
    // pub fn CryptSIPLoad();
    // pub fn CryptSIPPutSignedDataMsg();
    // pub fn CryptSIPRemoveProvider();
    // pub fn CryptSIPRemoveSignedDataMsg();
    // pub fn CryptSIPRetrieveSubjectGuid();
    // pub fn CryptSIPRetrieveSubjectGuidForCatalogFile();
    // pub fn CryptSIPVerifyIndirectData();
    // pub fn CryptSetAsyncParam();
    // pub fn CryptSetKeyIdentifierProperty();
    // pub fn CryptSetOIDFunctionValue();
    // pub fn CryptSignAndEncodeCertificate();
    // pub fn CryptSignAndEncryptMessage();
    // pub fn CryptSignCertificate();
    // pub fn CryptSignMessage();
    // pub fn CryptSignMessageWithKey();
    // pub fn CryptStringToBinaryA();
    // pub fn CryptStringToBinaryW();
    // pub fn CryptUninstallDefaultContext();
    // pub fn CryptUnprotectData();
    // pub fn CryptUnprotectMemory();
    // pub fn CryptUnregisterDefaultOIDFunction();
    // pub fn CryptUnregisterOIDFunction();
    // pub fn CryptUnregisterOIDInfo();
    // pub fn CryptUpdateProtectedState();
    // pub fn CryptVerifyCertificateSignature();
    // pub fn CryptVerifyCertificateSignatureEx();
    // pub fn CryptVerifyDetachedMessageHash();
    // pub fn CryptVerifyDetachedMessageSignature();
    // pub fn CryptVerifyMessageHash();
    // pub fn CryptVerifyMessageSignature();
    // pub fn CryptVerifyMessageSignatureWithKey();
    // pub fn CryptVerifyTimeStampSignature();
    // pub fn DbgInitOSS();
    // pub fn PFXExportCertStore();
    // pub fn PFXExportCertStore2();
    // pub fn PFXExportCertStoreEx();
    // pub fn PFXImportCertStore();
    // pub fn PFXIsPFXBlob();
    // pub fn PFXVerifyPassword();
}
